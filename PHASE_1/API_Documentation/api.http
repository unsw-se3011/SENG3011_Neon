@auth = JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6InR0dCIsImV4cCI6MTU1MzIxNDA3MSwiZW1haWwiOiIifQ.2NtKbt2tby5Z3TSfCU_0F3Rn-Ggs4Vb7koqv4mQS4LQ
@baseUrl = http://localhost:8000/v0/


POST {{baseUrl}}jwt/ HTTP/1.1
Content-Type: application/json

{
	"username": "ttt" ,
	"password": "apple123"
}



###

# register User
POST {{baseUrl}}users/ HTTP/1.1
Content-Type: application/json

{
    "username": "ttt",
    "password": "apple123",
    "first_name": "Toby",
    "last_name": "HUANG"
}


###
# get article 
GET {{baseUrl}}articles/ HTTP/1.1
Content-Type: application/json

###
# create article 

POST {{baseUrl}}articles/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}

{
    "url": "http://localhost:8000/v0/article/0",
    "headline": "no",
    "publish": "0200-01-01T15:20:00Z",
    "main_text": "helloworld",
    "p_fuzz": "M"
}



###
# get signle article 
GET {{baseUrl}}articles/1/ HTTP/1.1
Content-Type: application/json


###
# Get locations

GET {{baseUrl}}location/1 HTTP/1.1
Content-Type: application/json


###
# Create locations

POST  {{baseUrl}}location/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}

{
    "name": "Sydney",
    "lat": 12.22,
    "lng": 22.33
}

###
# Update locations

PUT  {{baseUrl}}location/1/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}

{
    "name": "Sydney Harbour Bridge",
    "lat": 22.33,
    "lng": 12.22
}


###
# Get syndromes

GET {{baseUrl}}syndromes/ HTTP/1.1
Content-Type: application/json


###
# Create syndromes

POST {{baseUrl}}syndromes/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}

{
    "name":"stomache"
}


###
# Create signle syndrome

GET {{baseUrl}}syndromes/stomache/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}


###
# Get diseases

GET {{baseUrl}}diseases/ HTTP/1.1
Content-Type: application/json

{}

###
# Create diseases

POST  {{baseUrl}}diseases/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}


{
    "name": "hello1",
    "syndromes": [
        "stomache"
    ]
}

###
# Get single diseases

GET {{baseUrl}}diseases/hello1/ HTTP/1.1
Content-Type: application/json


###
# create reports
# This is so big, the reason why it's so big, 
# is to make sure the data integrety 
# like a datbase transaction, we can only create all the object at once,
# or we not create it 

POST {{baseUrl}}reports/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}

{
    "article_id": 1,
    "disease": ["hello1"],
    "syndrome": ["stomache"],
    "comment": "",
    "report_events":[
        {
            "e_type": "D",
            "start_date": "2222-02-02T02:02",
            "sd_fuzz": "H",
            "end_date": "2222-02-03T02:02",
            "ed_fuzz": "M",
            "number_affected": 12,
            "location": {
                "name": "Sydney",
                "lat": 12.22,
                "lng": 22.33
            }
        }
    ]
}

###
# create reports events 

POST {{baseUrl}}report_events/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}

{
    "report_id":1,
    "e_type": "D",
    "start_date": "2222-02-02T02:02",
    "sd_fuzz": "H",
    "end_date": "2222-02-03T02:02",
    "ed_fuzz": "M",
    "number_effecet": 12,
    "location": {
        "name": "Sydney",
        "lat": 12.22,
        "lng": 22.33
    }
}

###
# Type of reports events's field
# we should notice it, because it contains many choices field

OPTIONS {{baseUrl}}report_events/ HTTP/1.1
Content-Type: application/json
Authorization: {{auth}}


###
# Search functionality

GET {{baseUrl}}articles/?search=another HTTP/1.1
Content-Type: application/json

###
# filter functionality
GET {{baseUrl}}articles/?headline=no HTTP/1.1

# ordering the result by decending 
GET {{baseUrl}}articles/?headline=no&ordering=-publish HTTP/1.1

###
# In report filter
# because we can't trace the disease and syndrome in the article 
# due to the limit of django orm 
GET {{baseUrl}}reports/?syndrome=stomache HTTP/1.1

###
# disease and syndrome double filter combine. 
GET {{baseUrl}}reports/?disease=hello1&syndrome=stomache HTTP/1.1

# what filed to search in report? I have no idea.